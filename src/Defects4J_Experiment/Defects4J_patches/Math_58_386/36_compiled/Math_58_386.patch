--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_386/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:17.760538428 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_386/36/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:23.399412565 -0500
@@ -383,7 +383,7 @@
                 if (ratio <= 0.25) {
                     double tmp =
                         (actRed < 0) ? (0.5 * dirDer / (dirDer + 0.5 * actRed)) : 0.5;
-                        if ((0.1 * cost >= previousCost) || (tmp < 0.1)) {
+                        if(((0.1*actRed)>=previousCost)||(tmp<0.1)){
                             tmp = 0.1;
                         }
                         delta = tmp * FastMath.min(delta, 10.0 * lmNorm);
