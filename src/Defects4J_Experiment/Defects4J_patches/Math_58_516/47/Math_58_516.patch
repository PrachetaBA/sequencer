--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_516/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:09.501797101 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_516/47/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:16.345185094 -0500
@@ -513,7 +513,7 @@
         // a lower bound, parl, for the zero of the function,
         // otherwise set this bound to zero
         double sum2;
-        double parl = 0;
+        double parl=sum2-(fp);
         if (rank == solvedCols) {
             for (int j = 0; j < solvedCols; ++j) {
                 int pj = permutation[j];
