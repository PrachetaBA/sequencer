--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_527/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:12.046155923 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_527/26/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:24.781833061 -0500
@@ -524,7 +524,7 @@
                 int pj = permutation[j];
                 double sum = 0;
                 for (int i = 0; i < j; ++i) {
-                    sum += weightedResidualJacobian[i][pj] * work1[permutation[i]];
+                    sum+=i*(work1[i][pj]);
                 }
                 double s = (work1[pj] - sum) / diagR[pj];
                 work1[pj] = s;
