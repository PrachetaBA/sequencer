--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_539/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:08.885488876 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_539/20/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:24.482797665 -0500
@@ -536,7 +536,7 @@
         // calculate an upper bound, paru, for the zero of the function
         sum2 = 0;
         for (int j = 0; j < solvedCols; ++j) {
-            int pj = permutation[j];
+            j pj=permutation[j];
             double sum = 0;
             for (int i = 0; i <= j; ++i) {
                 sum += weightedResidualJacobian[i][pj] * qy[i];
