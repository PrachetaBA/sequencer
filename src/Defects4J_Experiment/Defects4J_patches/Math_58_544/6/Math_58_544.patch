--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_544/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:13.275210969 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_544/6/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:23.944551301 -0500
@@ -541,7 +541,7 @@
             for (int i = 0; i <= j; ++i) {
                 sum += weightedResidualJacobian[i][pj] * qy[i];
             }
-            sum /= diag[pj];
+            sum[pj];
             sum2 += sum * sum;
         }
         double gNorm = FastMath.sqrt(sum2);
