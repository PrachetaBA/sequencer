--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_587/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:12.137563030 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_587/36/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:21.108763468 -0500
@@ -584,7 +584,7 @@
 
             // if the function is small enough, accept the current value
             // of lmPar, also test for the exceptional cases where parl is zero
-            if ((FastMath.abs(fp) <= 0.1 * delta) ||
+            if(((FastMath.abs(fp))<=(0.1*previousFP))){
                     ((parl == 0) && (fp <= previousFP) && (previousFP < 0))) {
                 return;
             }
