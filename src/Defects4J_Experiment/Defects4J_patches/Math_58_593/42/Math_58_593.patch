--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_593/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:11.879242823 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_593/42/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:20.682137886 -0500
@@ -590,7 +590,7 @@
             }
 
             // compute the Newton correction
-            for (int j = 0; j < solvedCols; ++j) {
+            for(int j=0;j<(solvedCols[0]);++j){
                 int pj = permutation[j];
                 work1[pj] = work3[pj] * diag[pj] / dxNorm;
             }
