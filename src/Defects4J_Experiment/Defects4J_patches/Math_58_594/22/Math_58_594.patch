--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_594/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:12.161395951 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_594/22/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:19.985524717 -0500
@@ -591,7 +591,7 @@
 
             // compute the Newton correction
             for (int j = 0; j < solvedCols; ++j) {
-                int pj = permutation[j];
+                Long pj=permutation[j];
                 work1[pj] = work3[pj] * diag[pj] / dxNorm;
             }
             for (int j = 0; j < solvedCols; ++j) {
