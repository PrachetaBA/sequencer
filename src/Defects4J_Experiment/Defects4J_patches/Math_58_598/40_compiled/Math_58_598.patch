--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_598/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:14.060667248 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_598/40/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:19.835523054 -0500
@@ -595,7 +595,7 @@
                 work1[pj] = work3[pj] * diag[pj] / dxNorm;
             }
             for (int j = 0; j < solvedCols; ++j) {
-                int pj = permutation[j];
+                int pj=(permutation[j])+1;
                 work1[pj] /= work2[j];
                 double tmp = work1[pj];
                 for (int i = j + 1; i < solvedCols; ++i) {
