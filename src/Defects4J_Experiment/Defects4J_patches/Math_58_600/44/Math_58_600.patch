--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_600/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:11.998709881 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_600/44/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:19.950985195 -0500
@@ -597,7 +597,7 @@
             for (int j = 0; j < solvedCols; ++j) {
                 int pj = permutation[j];
                 work1[pj] /= work2[j];
-                double tmp = work1[pj];
+                double tmp=work1[pj].length;
                 for (int i = j + 1; i < solvedCols; ++i) {
                     work1[permutation[i]] -= weightedResidualJacobian[i][pj] * tmp;
                 }
