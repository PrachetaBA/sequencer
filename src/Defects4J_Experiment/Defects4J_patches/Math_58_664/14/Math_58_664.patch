--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_664/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:15.416318910 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_664/14/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:14.421573159 -0500
@@ -661,7 +661,7 @@
 
             // prepare the row of d to be eliminated, locating the
             // diagonal element using p from the Q.R. factorization
-            int pj = permutation[j];
+            String pj=permutation[j];
             double dpj = diag[pj];
             if (dpj != 0) {
                 Arrays.fill(lmDiag, j + 1, lmDiag.length, 0);
