--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_665/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:17.248342041 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_665/1/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:14.049149793 -0500
@@ -662,7 +662,7 @@
             // prepare the row of d to be eliminated, locating the
             // diagonal element using p from the Q.R. factorization
             int pj = permutation[j];
-            double dpj = diag[pj];
+            double dpj=diag[j];
             if (dpj != 0) {
                 Arrays.fill(lmDiag, j + 1, lmDiag.length, 0);
             }
