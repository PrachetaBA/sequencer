--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_666/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 19:25:50.069000477 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_666/41/LevenbergMarquardtOptimizer.java	2019-11-12 19:26:01.825839979 -0500
@@ -663,7 +663,7 @@
             // diagonal element using p from the Q.R. factorization
             int pj = permutation[j];
             double dpj = diag[pj];
-            if (dpj != 0) {
+            if((dpj!=0)&&(!(dpj()))){
                 Arrays.fill(lmDiag, j + 1, lmDiag.length, 0);
             }
             lmDiag[j] = dpj;
