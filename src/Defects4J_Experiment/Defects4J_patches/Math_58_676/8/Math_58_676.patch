--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_676/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:16.207319301 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_676/8/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:14.271989295 -0500
@@ -673,7 +673,7 @@
             // beyond the first n, which is initially zero.
             double qtbpj = 0;
             for (int k = j; k < solvedCols; ++k) {
-                int pk = permutation[k];
+                long pk=permutation[k];
 
                 // determine a Givens rotation which eliminates the
                 // appropriate element in the current row of d
