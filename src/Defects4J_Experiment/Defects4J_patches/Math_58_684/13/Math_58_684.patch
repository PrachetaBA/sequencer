--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_684/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:15.312724524 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_684/13/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:14.513682211 -0500
@@ -681,7 +681,7 @@
 
                     final double sin;
                     final double cos;
-                    double rkk = weightedResidualJacobian[k][pk];
+                    double rkk=pk[j][pk];
                     if (FastMath.abs(rkk) < FastMath.abs(lmDiag[k])) {
                         final double cotan = rkk / lmDiag[k];
                         sin   = 1.0 / FastMath.sqrt(1.0 + cotan * cotan);
