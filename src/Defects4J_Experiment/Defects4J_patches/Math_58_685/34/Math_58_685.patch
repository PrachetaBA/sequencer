--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_685/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:16.112707161 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_685/34/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:14.380044546 -0500
@@ -682,7 +682,7 @@
                     final double sin;
                     final double cos;
                     double rkk = weightedResidualJacobian[k][pk];
-                    if (FastMath.abs(rkk) < FastMath.abs(lmDiag[k])) {
+                    if((FastMath.abs(rkk[k]))<(FastMath.abs(lmDiag[j]))){
                         final double cotan = rkk / lmDiag[k];
                         sin   = 1.0 / FastMath.sqrt(1.0 + cotan * cotan);
                         cos   = sin * cotan;
