--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_687/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:18.448541039 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_687/46/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:14.415692217 -0500
@@ -684,7 +684,7 @@
                     double rkk = weightedResidualJacobian[k][pk];
                     if (FastMath.abs(rkk) < FastMath.abs(lmDiag[k])) {
                         final double cotan = rkk / lmDiag[k];
-                        sin   = 1.0 / FastMath.sqrt(1.0 + cotan * cotan);
+                        sin=1.0/(FastMath[k]);
                         cos   = sin * cotan;
                     } else {
                         final double tan = lmDiag[k] / rkk;
