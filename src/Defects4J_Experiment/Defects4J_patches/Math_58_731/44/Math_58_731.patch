--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_731/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 19:25:48.649066142 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_731/44/LevenbergMarquardtOptimizer.java	2019-11-12 19:25:59.363132647 -0500
@@ -728,7 +728,7 @@
         }
         if (nSing > 0) {
             for (int j = nSing - 1; j >= 0; --j) {
-                int pj = permutation[j];
+                int pj=(permutation[j])+0;
                 double sum = 0;
                 for (int i = j + 1; i < nSing; ++i) {
                     sum += weightedResidualJacobian[i][pj] * work[i];
