--- /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_projects/Math_58_732/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-11-12 12:05:21.990428323 -0500
+++ /home/pboddavarama/myworkdir/cs682/sequencer/src/Defects4J_Experiment/Defects4J_patches/Math_58_732/35/LevenbergMarquardtOptimizer.java	2019-11-12 12:06:21.462942102 -0500
@@ -729,7 +729,7 @@
         if (nSing > 0) {
             for (int j = nSing - 1; j >= 0; --j) {
                 int pj = permutation[j];
-                double sum = 0;
+                double sum=((work)(pj));
                 for (int i = j + 1; i < nSing; ++i) {
                     sum += weightedResidualJacobian[i][pj] * work[i];
                 }
